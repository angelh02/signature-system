{"version":3,"file":"js/5.js","mappings":"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","sources":["webpack:///./resources/api/container/index.js","webpack:///./resources/api/index.js","webpack:///./resources/js/composables/document-apis/useDocumentsRequest.js","webpack:///./resources/js/components/mydocuments/DocumentStatus.vue?5efb","webpack:///./resources/js/components/mydocuments/DocumentStatus.vue"],"sourcesContent":["import axios from \"axios\";\n\nconst Host  = 'https://127.0.0.1:8000'\n\n// const getFileRequests = async () => {\n//     try {\n//         const res = await axios.get(`/api/classification/background/get-all`);\n//         return res;\n//     } \n//     catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// GET CONSERVATION TIMES\nasync function getConservationTimes() {\n    return await axios\n    .get(`/api/container/conservation-time/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// GET CONSERVATION TYPES\nasync function getConservationTypes() {\n    return await axios\n    .get(`/api/container/conservation-type/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// GET DOCUMENT VALUES\nasync function getDocumentValues() {\n    return await axios\n    .get(`/api/container/document-value/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// GET INFORMATION TYPES\nasync function getInformationTypes() {\n    return await axios\n    .get(`/api/container/information-type/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// GET SELECTION TECHNIQUES\nasync function getSelectionTechniques() {\n    return await axios\n    .get(`/api/container/selection-technique/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// CONTAINERS\n// GET CONTAINERS\nasync function getContainers() {\n    return await axios\n    .get(`/api/container/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// STORE CONTAINER\nasync function addContainer(formData) {\n    return await axios\n      .post(`/api/container/store`, formData, {\n        headers: { 'content-type': 'multipart/form-data' },\n      }\n      )\n      .then((res) => {\n        if (res.status != 200) throw new Error(\"Response Failed\");\n        return res.data;\n      })\n  }\n// UPDATE CONTAINER\nasync function editContainer(editData) {\n  return await axios\n    .post(`/api/container/update`, editData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })\n}\n// Eliminar\nasync function deleteContainer(id) {\nreturn await axios\n  .delete(`/api/container/delete/`+id\n  )\n  .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n  })\n}\n\n// const deleteClassification = async (id) => {\n//   try {\n//     const res = await axios.delete(`/api/classification/delete/`+id);\n//     return res.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport default {getContainers,getConservationTimes,getConservationTypes,getDocumentValues,getInformationTypes,getSelectionTechniques,addContainer,editContainer,deleteContainer}","import axios from \"axios\";\n\nconst Host  = 'https://127.0.0.1:8000'\n\n// const getFileRequests = async () => {\n//     try {\n//         const res = await axios.get(`/api/classification/background/get-all`);\n//         return res;\n//     } \n//     catch (err) {\n//         console.error(err);\n//     }\n// };\n\n\n// Fondos\nasync function getBackground() {\n    return await axios\n    .get(`/api/classification/background/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// Secciones\nasync function getSection() {\n    return await axios\n    .get(`/api/classification/section/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// Produccion\nasync function getProductionArea() {\n    return await axios\n    .get(`/api/classification/production-area/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// Clasificaciones\nasync function getClasification() {\n    return await axios\n    .get(`/api/classification/get-all`, \n    // {\n    // headers: { 'content-type': 'application/json' },\n    // }\n    )\n    .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n    })  \n}\n// Agregar \nasync function addClassification(formData) {\n    return await axios\n      .post(`/api/classification/store`, formData, {\n        headers: { 'content-type': 'multipart/form-data' },\n      }\n      )\n      .then((res) => {\n        if (res.status != 200) throw new Error(\"Response Failed\");\n        return res.data;\n      })\n  }\n// Editar\nasync function editClassification(editData) {\n  return await axios\n    .post(`/api/classification/update`, editData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })\n}\n// Eliminar\nasync function deleteClassification(id) {\nreturn await axios\n  .delete(`/api/classification/delete/`+id\n  )\n  .then((res) => {\n    if (res.status != 200) throw new Error(\"Response Failed\");\n    return res.data;\n  })\n}\n\n// const deleteClassification = async (id) => {\n//   try {\n//     const res = await axios.delete(`/api/classification/delete/`+id);\n//     return res.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport default {getClasification,getBackground,getSection,getProductionArea,addClassification,editClassification,deleteClassification}","import useDocumentsRequestsAPI from \"@/api/document/index.js\";\nimport useClasificationRequestsAPI from \"@/api/index.js\";\nimport useContainerRequestsAPI from \"@/api/container/index.js\";\n\n\n\nexport function useDocumentsRequests(from = null, to = null) {\n    const getDocument= async (id) => {\n        return await useDocumentsRequestsAPI.getDocument(id);\n    };\n\n    const getDocumentsType = async () => {\n        return await useDocumentsRequestsAPI.getDocumentsType();\n    };\n\n    const getClasification = async () => {\n        return await useClasificationRequestsAPI.getClasification();\n    };\n\n    const getContainers = async () => {\n        return await useContainerRequestsAPI.getContainers();\n    };\n\n\n    return {\n        getDocument,\n        getDocumentsType,\n        getClasification,\n        getContainers\n    };\n}\n","import script from \"./DocumentStatus.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DocumentStatus.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"px-4\">\n        <div class=\"page-title-box\">\n            <h1 class=\"page-title\">Estado actual del documento</h1>\n        </div>\n        <p>\n            En esta página puedes consultar el estado del documento y cada uno  de sus firmantes en tiempo real, junto con información detallada sobre el documento y las personas que ya han firmado.\n        </p>\n        <h4>\n            <span :class=\"'badge border border-light rounded-circle p-1 bg-'+(documentData.signed == 0  ? 'warning' : 'success') \">\n                <i :class=\"(documentData.signed == 0 ? 'dripicons-clock' : 'dripicons-checkmark')\"></i>\n            </span>\n            {{documentData.signed == 0 ? \"Documento con firmas pendientes\" : \"Documento firmado\"}}\n        </h4>\n        <div class=\"mt-3\">\n            <h4>Sobre el documento</h4>\n            <div class=\"card border-secondary border mt-3\">\n                <div class=\"card-body p-2\">\n                    <table class=\"table table-sm table-borderless mb-0\">\n                        <col width=100><col width=100><col width=100>\n                        <tbody>\n                            <tr>\n                                <td colspan=\"1\">Nombre del documento: </td>\n                                <td colspan=\"2\">{{documentData.name}}</td>\n                            </tr>\n                            <tr>\n                                <td>Tipo de documento: </td>\n                                <td>{{documentData.document_type?.name}}</td>\n                            </tr>\n                            <tr>\n                                <td>Clasificación: </td>\n                                <td>{{documentData.classification?.name}}</td>\n                            </tr>\n                            <tr>\n                                <td>Contenedor: </td>\n                                <td>{{documentData.container?.name}}</td>\n                            </tr>\n                            <tr>\n                                <td>Fecha de creación: </td>\n                                <td>{{documentData.created_at}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"mt-3\">\n            <h4>Sobre el los firmantes</h4>\n            <p>\n                En esta sección  puedes consultar el estado de cada una de las firmas requeridas. En caso de que el firmante ya haya firmado podrás visualizar sus datos, su firma y la fecha en la que firmó.\n            </p>\n            <div class=\"card border-secondary border mt-3\" v-if=\"documentData?.document_signers?.length > 0\">\n                <div class=\"card-body p-2\">\n                    <table class=\"table table-sm table-borderless mb-0\">\n                        <col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100><col width=100>\n                        <tbody>\n                            <tr v-for=\"signer in documentData?.document_signers\">\n                                <td colspan=\"1\"><p class=\"m-0\"><span :class=\"'badge bg-'+(signer.signed == 0 ? 'warning' : 'success')\">{{signer.signed == 0 ? 'Pendiente' : 'Firmado'}}</span></p></td>\n                                <td colspan=\"2\">{{signer.email}}</td>\n                                <td colspan=\"2\">{{signer.name+\" \"+signer.surnames}}</td>\n                                <td colspan=\"2\" v-if=\"signer.signed == 1\">Firmado: {{signer.signed_at}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { ref, onMounted, toRefs, toRef, reactive } from \"vue\";\nimport $ from \"jquery\";\nimport { integer } from \"@vuelidate/validators\";\nimport {useRoute} from 'vue-router';\nimport { useDocumentsRequests } from \"@/js/composables/document-apis/useDocumentsRequest.js\";\n\nconst route = useRoute()\nconst documentId = ref(0);\n\n//Extract functions about requests\nconst { getDocument } =\n    useDocumentsRequests();\n\n//Document\nconst documentData = ref(\"\");\n\nonMounted(async () => {\n    documentId.value = parseInt(route.params.id);\n    searchDocument();\n});\n\nconst searchDocument = async () => {\n    documentData.value = await getDocument(documentId.value);\n    console.log(documentData.value.classification);\n};\n</script>"],"names":["axios","then","res","status","Error","data","formData","headers","editData","id","getContainers","getConservationTimes","getConservationTypes","getDocumentValues","getInformationTypes","getSelectionTechniques","addContainer","editContainer","deleteContainer","getClasification","getBackground","getSection","getProductionArea","addClassification","editClassification","deleteClassification","i","useDocumentsRequests","getDocument","useDocumentsRequestsAPI","getDocumentsType","useClasificationRequestsAPI","useContainerRequestsAPI","route","useRoute","documentId","ref","documentData","onMounted","value","parseInt","params","searchDocument","console","log","classification"],"sourceRoot":""}