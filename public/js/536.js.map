{"version":3,"file":"js/536.js","mappings":"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","sources":["webpack:///./node_modules/@vuelidate/core/dist/index.esm.js","webpack:///./node_modules/@vuelidate/validators/dist/index.esm.js","webpack:///./node_modules/datatables/media/js/jquery.dataTables.js","webpack:///./resources/api/admin/catalogs/classification/background.js","webpack:///./resources/api/admin/catalogs/classification/production-area.js","webpack:///./resources/api/admin/catalogs/classification/section.js","webpack:///./resources/api/admin/catalogs/container/conservation-time.js","webpack:///./resources/api/admin/catalogs/container/conservation-type.js","webpack:///./resources/api/admin/catalogs/container/document-value.js","webpack:///./resources/api/admin/catalogs/container/information-type.js","webpack:///./resources/api/admin/catalogs/container/selection-technique.js","webpack:///./resources/api/admin/catalogs/document-type.js","webpack:///./resources/js/components/admin/catalogs/FormCatalogs.vue?6fc8","webpack:///./resources/js/components/admin/catalogs/FormCatalogs.vue","webpack:///./resources/js/components/admin/catalogs/TableCatalogs.vue?57f3","webpack:///./resources/js/components/admin/catalogs/TableCatalogs.vue","webpack:///./resources/js/composables/admin-apis/useCatalogsRequest.js","webpack:///./resources/js/components/admin/catalogs/GlobalCatalogs.vue?ec20","webpack:///./resources/js/components/admin/catalogs/GlobalCatalogs.vue","webpack:///./resources/js/components/elements/ConfirmationModal.vue?c094","webpack:///./resources/js/components/elements/ConfirmationModal.vue"],"sourcesContent":["import { isReactive, isReadonly, computed, unref, ref, watch, reactive, isRef, nextTick, inject, provide, getCurrentInstance, onBeforeMount, onBeforeUnmount } from 'vue-demi';\n\nfunction unwrapObj(obj) {\n  let ignoreKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return Object.keys(obj).reduce((o, k) => {\n    if (ignoreKeys.includes(k)) return o;\n    o[k] = unref(obj[k]);\n    return o;\n  }, {});\n}\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction get(obj, stringPath, def) {\n  // Cache the current object\n  let current = obj;\n  const path = stringPath.split('.'); // For each item in the path, dig into the object\n\n  for (let i = 0; i < path.length; i++) {\n    // If the item isn't found, return the default (or null)\n    if (!current[path[i]]) return def; // Otherwise, update the current  value\n\n    current = current[path[i]];\n  }\n\n  return current;\n}\nfunction gatherBooleanGroupProperties(group, nestedResults, property) {\n  return computed(() => {\n    return group.some(path => {\n      return get(nestedResults, path, {\n        [property]: false\n      })[property];\n    });\n  });\n}\nfunction gatherArrayGroupProperties(group, nestedResults, property) {\n  return computed(() => {\n    return group.reduce((all, path) => {\n      const fetchedProperty = get(nestedResults, path, {\n        [property]: false\n      })[property] || [];\n      return all.concat(fetchedProperty);\n    }, []);\n  });\n}\n\n/**\n * Response form a raw Validator function.\n * Should return a Boolean or an object with $invalid property.\n * @typedef {Boolean | { $valid: Boolean }} ValidatorResponse\n */\n\n/**\n * Calls a validation rule by unwrapping its value first from a ref.\n * @param {Validator} rule\n * @param {Ref} value\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @return {Promise<ValidatorResponse> | ValidatorResponse}\n */\n\nfunction callRule(rule, value, siblingState, instance) {\n  return rule.call(instance, unref(value), unref(siblingState), instance);\n}\n/**\n * Normalizes the validator result\n * Allows passing a boolean of an object like `{ $valid: Boolean }`\n * @param {ValidatorResponse} result - Validator result\n * @return {boolean}\n */\n\n\nfunction normalizeValidatorResponse(result) {\n  return result.$valid !== undefined ? !result.$valid : !result;\n}\n/**\n * Returns the result of an async validator.\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $pending\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Ref<*>[]} watchTargets\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @param {Ref<Number>} $lastCommittedOn\n * @return {{ $invalid: Ref<Boolean>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createAsyncResult(rule, model, $pending, $dirty, _ref, $response, instance) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref;\n  let watchTargets = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  let siblingState = arguments.length > 8 ? arguments[8] : undefined;\n  let $lastInvalidState = arguments.length > 9 ? arguments[9] : undefined;\n  let $lastCommittedOn = arguments.length > 10 ? arguments[10] : undefined;\n  const $invalid = ref(!!$dirty.value);\n  const $pendingCounter = ref(0);\n  $pending.value = false;\n  const $unwatch = watch([model, $dirty].concat(watchTargets, $lastCommittedOn), () => {\n    if ( // if $lazy and not dirty, return\n    $lazy && !$dirty.value || // if in $rewardEarly mode and no previous errors, nothing pending, return\n    $rewardEarly && !$lastInvalidState.value && !$pending.value) {\n      return;\n    }\n\n    let ruleResult; // make sure we dont break if a validator throws\n\n    try {\n      ruleResult = callRule(rule, model, siblingState, instance);\n    } catch (err) {\n      // convert to a promise, so we can handle it async\n      ruleResult = Promise.reject(err);\n    }\n\n    $pendingCounter.value++;\n    $pending.value = !!$pendingCounter.value; // ensure $invalid is false, while validator is resolving\n\n    $invalid.value = false;\n    Promise.resolve(ruleResult).then(data => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = data;\n      $invalid.value = normalizeValidatorResponse(data);\n    }).catch(error => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = error;\n      $invalid.value = true;\n    });\n  }, {\n    immediate: true,\n    deep: typeof model === 'object'\n  });\n  return {\n    $invalid,\n    $unwatch\n  };\n}\n/**\n * Returns the result of a sync validator\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {Boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @return {{$unwatch: (function(): {}), $invalid: ComputedRef<boolean>}}\n */\n\n\nfunction createSyncResult(rule, model, $dirty, _ref2, $response, instance, siblingState, $lastInvalidState) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref2;\n\n  const $unwatch = () => ({});\n\n  const $invalid = computed(() => {\n    if ( // return early if $lazy mode and not touched\n    $lazy && !$dirty.value || // If $rewardEarly mode is ON and last invalid was false (no error), return it.\n    // If we want to invalidate, we just flip the last state to true, causing the computed to run again\n    $rewardEarly && !$lastInvalidState.value) {\n      return false;\n    }\n\n    let returnValue = true;\n\n    try {\n      const result = callRule(rule, model, siblingState, instance);\n      $response.value = result;\n      returnValue = normalizeValidatorResponse(result);\n    } catch (err) {\n      $response.value = err;\n    }\n\n    return returnValue;\n  });\n  return {\n    $unwatch,\n    $invalid\n  };\n}\n/**\n * Returns the validation result.\n * Detects async and sync validators.\n * @param {NormalizedValidator} rule\n * @param {Ref<*>} model\n * @param {Ref<boolean>} $dirty\n * @param {GlobalConfig} config - Vuelidate config\n * @param {VueInstance} instance - component instance\n * @param {string} validatorName - name of the current validator\n * @param {string} propertyKey - the current property we are validating\n * @param {string} propertyPath - the deep path to the validated property\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState - the last invalid state\n * @param {Ref<Number>} $lastCommittedOn - the last time $commit was called\n * @return {{ $params: *, $message: Ref<String>, $pending: Ref<Boolean>, $invalid: Ref<Boolean>, $response: Ref<*>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createValidatorResult(rule, model, $dirty, config, instance, validatorName, propertyKey, propertyPath, siblingState, $lastInvalidState, $lastCommittedOn) {\n  const $pending = ref(false);\n  const $params = rule.$params || {};\n  const $response = ref(null);\n  let $invalid;\n  let $unwatch;\n\n  if (rule.$async) {\n    ({\n      $invalid,\n      $unwatch\n    } = createAsyncResult(rule.$validator, model, $pending, $dirty, config, $response, instance, rule.$watchTargets, siblingState, $lastInvalidState, $lastCommittedOn));\n  } else {\n    ({\n      $invalid,\n      $unwatch\n    } = createSyncResult(rule.$validator, model, $dirty, config, $response, instance, siblingState, $lastInvalidState));\n  }\n\n  const message = rule.$message;\n  const $message = isFunction(message) ? computed(() => message(unwrapObj({\n    $pending,\n    $invalid,\n    $params: unwrapObj($params),\n    // $params can hold refs, so we unwrap them for easy access\n    $model: model,\n    $response,\n    $validator: validatorName,\n    $propertyPath: propertyPath,\n    $property: propertyKey\n  }))) : message || '';\n  return {\n    $message,\n    $params,\n    $pending,\n    $invalid,\n    $response,\n    $unwatch\n  };\n}\n\n/**\n * Sorts a validation definition into rules, configs and nested validators.\n * @param {Object<NormalizedValidator|Function>} validationsRaw\n * @return {{ rules: Object<NormalizedValidator>, nestedValidators: Object, config: GlobalConfig }}\n */\n\nfunction sortValidations() {\n  let validationsRaw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const validations = unref(validationsRaw);\n  const validationKeys = Object.keys(validations);\n  const rules = {};\n  const nestedValidators = {};\n  const config = {};\n  let validationGroups = null;\n  validationKeys.forEach(key => {\n    const v = validations[key];\n\n    switch (true) {\n      // If it is already normalized, use it\n      case isFunction(v.$validator):\n        rules[key] = v;\n        break;\n      // If it is just a function, normalize it first\n      // into { $validator: <Fun> }\n\n      case isFunction(v):\n        rules[key] = {\n          $validator: v\n        };\n        break;\n\n      case key === '$validationGroups':\n        validationGroups = v;\n        break;\n      // Catch $-prefixed properties as config\n\n      case key.startsWith('$'):\n        config[key] = v;\n        break;\n      // If it doesn’t match any of the above,\n      // treat as nestedValidators state property\n\n      default:\n        nestedValidators[key] = v;\n    }\n  });\n  return {\n    rules,\n    nestedValidators,\n    config,\n    validationGroups\n  };\n}\n\nfunction _empty() {}\n\nconst ROOT_PATH = '__root';\n/** @typedef {import('vue-demi').ComponentPublicInstance} VueInstance */\n\n/** @typedef {import('vue-demi').ComputedRef} ComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapRef} UnwrapRef */\n\n/** @typedef {import('vue-demi').WatchStopHandle} WatchStopHandle */\n\n/** @typedef {import('vue-demi').WritableComputedRef} WritableComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapNestedRefs} UnwrapNestedRefs */\n\n/**\n * @typedef NormalizedValidator\n * @property {Validator} $validator\n * @property {String | Ref<String> | function(*): string} [$message]\n * @property {Object | Ref<Object>} [$params]\n * @property {Object | Ref<Object>} [$async]\n * @property {Ref<*>[]} [$watchTargets]\n */\n\n/**\n * Raw validator function, before being normalized\n * Can return a Promise or a {@see ValidatorResponse}\n * @typedef {function(*): ((Promise<ValidatorResponse> | ValidatorResponse))} Validator\n */\n\n/**\n * @typedef ErrorObject\n * @property {Ref<String>} $message - Reactive error message\n * @property {Ref<Object>} $params - Params passed from withParams\n * @property {Ref<Boolean>} $pending - If validation is pending\n * @property {String} $property - State key\n * @property {String} $propertyPath - Dot notation path to state\n * @property {String} $validator - Validator name\n * @property {String} $uid - Unique identifier\n */\n\n/**\n * @typedef ValidationResult\n * @property {Ref<Boolean>} $pending\n * @property {Ref<Boolean>} $dirty\n * @property {Ref<Boolean>} $invalid\n * @property {Ref<Boolean>} $error\n * @property {Ref<String>} $path\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} $commit\n */\n\n/**\n * Creates the main Validation Results object for a state tree\n * Walks the tree's top level branches\n * @param {Object<NormalizedValidator>} rules - Rules for the current state tree\n * @param {Object} model - Current state value\n * @param {String} key - Key for the current state tree\n * @param {ResultsStorage} [resultsCache] - A cache map of all the validators\n * @param {String} [path] - the current property path\n * @param {GlobalConfig} [config] - the config object\n * @param {VueInstance} instance\n * @param {ComputedRef<Object>} externalResults\n * @param {Object} siblingState\n * @return {ValidationResult | {}}\n */\n\nfunction _call(body, then, direct) {\n  if (direct) {\n    return then ? then(body()) : body();\n  }\n\n  try {\n    var result = Promise.resolve(body());\n    return then ? result.then(then) : result;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n/**\n * Collects the validation results of all nested state properties\n * @param {Object<NormalizedValidator|Function>} validations - The validation\n * @param {Object} nestedState - Current state\n * @param {String} path - Path to current property\n * @param {ResultsStorage} resultsCache - Validations cache map\n * @param {GlobalConfig} config - The config object\n * @param {VueInstance} instance - The current Vue instance\n * @param {ComputedRef<object>} nestedExternalResults - The external results for this nested collection\n * @return {Object<string, VuelidateState>}\n */\n\n\nfunction _callIgnored(body, direct) {\n  return _call(body, _empty, direct);\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nfunction createValidationResults(rules, model, key, resultsCache, path, config, instance, externalResults, siblingState) {\n  // collect the property keys\n  const ruleKeys = Object.keys(rules);\n  const cachedResult = resultsCache.get(path, rules);\n  const $dirty = ref(false); // state for the $rewardEarly option\n\n  /** The last invalid state of this property */\n\n  const $lastInvalidState = ref(false);\n  /** The last time $commit was called. Used to re-trigger async calls */\n\n  const $lastCommittedOn = ref(0);\n\n  if (cachedResult) {\n    // if the rules are the same as before, use the cached results\n    if (!cachedResult.$partial) return cachedResult; // remove old watchers\n\n    cachedResult.$unwatch(); // use the `$dirty.value`, so we dont save references by accident\n\n    $dirty.value = cachedResult.$dirty.value;\n  }\n\n  const result = {\n    // restore $dirty from cache\n    $dirty,\n    $path: path,\n    $touch: () => {\n      if (!$dirty.value) $dirty.value = true;\n    },\n    $reset: () => {\n      if ($dirty.value) $dirty.value = false;\n    },\n    $commit: () => {}\n  };\n  /**\n   * If there are no validation rules, it is most likely\n   * a top level state, aka root\n   */\n\n  if (!ruleKeys.length) {\n    // if there are cached results, we should overwrite them with the new ones\n    cachedResult && resultsCache.set(path, rules, result);\n    return result;\n  }\n\n  ruleKeys.forEach(ruleKey => {\n    result[ruleKey] = createValidatorResult(rules[ruleKey], model, result.$dirty, config, instance, ruleKey, key, path, siblingState, $lastInvalidState, $lastCommittedOn);\n  });\n  result.$externalResults = computed(() => {\n    if (!externalResults.value) return [];\n    return [].concat(externalResults.value).map((stringError, index) => ({\n      $propertyPath: path,\n      $property: key,\n      $validator: '$externalResults',\n      $uid: `${path}-externalResult-${index}`,\n      $message: stringError,\n      $params: {},\n      $response: null,\n      $pending: false\n    }));\n  });\n  result.$invalid = computed(() => {\n    const r = ruleKeys.some(ruleKey => unref(result[ruleKey].$invalid)); // cache the last invalid state\n\n    $lastInvalidState.value = r;\n    return !!result.$externalResults.value.length || r;\n  });\n  result.$pending = computed(() => ruleKeys.some(ruleKey => unref(result[ruleKey].$pending)));\n  result.$error = computed(() => result.$dirty.value ? result.$pending.value || result.$invalid.value : false);\n  result.$silentErrors = computed(() => ruleKeys.filter(ruleKey => unref(result[ruleKey].$invalid)).map(ruleKey => {\n    const res = result[ruleKey];\n    return reactive({\n      $propertyPath: path,\n      $property: key,\n      $validator: ruleKey,\n      $uid: `${path}-${ruleKey}`,\n      $message: res.$message,\n      $params: res.$params,\n      $response: res.$response,\n      $pending: res.$pending\n    });\n  }).concat(result.$externalResults.value));\n  result.$errors = computed(() => result.$dirty.value ? result.$silentErrors.value : []);\n\n  result.$unwatch = () => ruleKeys.forEach(ruleKey => {\n    result[ruleKey].$unwatch();\n  });\n\n  result.$commit = () => {\n    $lastInvalidState.value = true;\n    $lastCommittedOn.value = Date.now();\n  };\n\n  resultsCache.set(path, rules, result);\n  return result;\n}\n\nfunction collectNestedValidationResults(validations, nestedState, path, resultsCache, config, instance, nestedExternalResults) {\n  const nestedValidationKeys = Object.keys(validations); // if we have no state, return empty object\n\n  if (!nestedValidationKeys.length) return {};\n  return nestedValidationKeys.reduce((results, nestedKey) => {\n    // build validation results for nested state\n    results[nestedKey] = setValidations({\n      validations: validations[nestedKey],\n      state: nestedState,\n      key: nestedKey,\n      parentKey: path,\n      resultsCache,\n      globalConfig: config,\n      instance,\n      externalResults: nestedExternalResults\n    });\n    return results;\n  }, {});\n}\n/**\n * Generates the Meta fields from the results\n * @param {ValidationResult|{}} results\n * @param {Object.<string, VuelidateState>} nestedResults\n * @param {Object.<string, ValidationResult>} childResults\n * @return {{$anyDirty: Ref<Boolean>, $error: Ref<Boolean>, $invalid: Ref<Boolean>, $errors: Ref<ErrorObject[]>, $dirty: Ref<Boolean>, $touch: Function, $reset: Function }}\n */\n\n\nfunction createMetaFields(results, nestedResults, childResults) {\n  const allResults = computed(() => [nestedResults, childResults].filter(res => res).reduce((allRes, res) => {\n    return allRes.concat(Object.values(unref(res)));\n  }, [])); // returns `$dirty` as true, if all children are dirty\n\n  const $dirty = computed({\n    get() {\n      return results.$dirty.value || (allResults.value.length ? allResults.value.every(r => r.$dirty) : false);\n    },\n\n    set(v) {\n      results.$dirty.value = v;\n    }\n\n  });\n  const $silentErrors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$silentErrors) || []; // collect all nested and child $silentErrors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$silentErrors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$silentErrors);\n    }, []); // merge the $silentErrors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $errors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$errors) || []; // collect all nested and child $errors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$errors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$errors);\n    }, []); // merge the $errors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $invalid = computed(() => // if any of the nested values is invalid\n  allResults.value.some(r => r.$invalid) || // or if the current state is invalid\n  unref(results.$invalid) || // fallback to false if is root\n  false);\n  const $pending = computed(() => // if any of the nested values is pending\n  allResults.value.some(r => unref(r.$pending)) || // if any of the current state validators is pending\n  unref(results.$pending) || // fallback to false if is root\n  false);\n  const $anyDirty = computed(() => allResults.value.some(r => r.$dirty) || allResults.value.some(r => r.$anyDirty) || $dirty.value);\n  const $error = computed(() => $dirty.value ? $pending.value || $invalid.value : false);\n\n  const $touch = () => {\n    // call the root $touch\n    results.$touch(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$touch();\n    });\n  };\n\n  const $commit = () => {\n    // call the root $touch\n    results.$commit(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$commit();\n    });\n  };\n\n  const $reset = () => {\n    // reset the root $dirty state\n    results.$reset(); // reset all the children $dirty states\n\n    allResults.value.forEach(result => {\n      result.$reset();\n    });\n  }; // Ensure that if all child and nested results are $dirty, this also becomes $dirty\n\n\n  if (allResults.value.length && allResults.value.every(nr => nr.$dirty)) $touch();\n  return {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  };\n}\n/**\n * @typedef VuelidateState\n * @property {WritableComputedRef<any>} $model\n * @property {ComputedRef<Boolean>} $dirty\n * @property {ComputedRef<Boolean>} $error\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<Boolean>} $invalid\n * @property {ComputedRef<Boolean>} $anyDirty\n * @property {ComputedRef<Boolean>} $pending\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {String} $path\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} [$validate]\n * @property {Function} [$getResultsForChild]\n * @property {Object.<string, VuelidateState>}\n */\n\n/**\n * Main Vuelidate bootstrap function.\n * Used both for Composition API in `setup` and for Global App usage.\n * Used to collect validation state, when walking recursively down the state tree\n * @param {Object} params\n * @param {Object<NormalizedValidator|Function>} params.validations\n * @param {Object} params.state\n * @param {String} [params.key] - Current state property key. Used when being called on nested items\n * @param {String} [params.parentKey] - Parent state property key. Used when being called recursively\n * @param {Object<string, ValidationResult>} [params.childResults] - Used to collect child results.\n * @param {ResultsStorage} params.resultsCache - The cached validation results\n * @param {VueInstance} params.instance - The current Vue instance\n * @param {GlobalConfig} params.globalConfig - The validation config, passed to this setValidations instance.\n * @param {UnwrapNestedRefs<object> | Ref<Object>} params.externalResults - External validation results\n * @return {UnwrapNestedRefs<VuelidateState>}\n */\n\n\nfunction setValidations(_ref) {\n  /**\n   * Executes the validators and returns the result.\n   * @return {Promise<boolean>}\n   */\n  const $validate = _async(function () {\n    $touch();\n    return _invoke(function () {\n      if (mergedConfig.$rewardEarly) {\n        $commit(); // await the watchers\n\n        return _callIgnored(nextTick);\n      }\n    }, function () {\n      // await the watchers\n      return _call(nextTick, function () {\n        return new Promise(resolve => {\n          // return whether it is valid or not\n          if (!$pending.value) return resolve(!$invalid.value);\n          const unwatch = watch($pending, () => {\n            resolve(!$invalid.value);\n            unwatch();\n          });\n        });\n      });\n    });\n  });\n  /**\n   * Returns a child component's results, based on registration name\n   * @param {string} key\n   * @return {VuelidateState}\n   */\n\n\n  let {\n    validations,\n    state,\n    key,\n    parentKey,\n    childResults,\n    resultsCache,\n    globalConfig = {},\n    instance,\n    externalResults\n  } = _ref;\n  const path = parentKey ? `${parentKey}.${key}` : key; // Sort out the validation object into:\n  // – rules = validators for current state tree fragment\n  // — nestedValidators = nested state fragments keys that might contain more validators\n  // – config = configuration properties that affect this state fragment\n\n  const {\n    rules,\n    nestedValidators,\n    config,\n    validationGroups\n  } = sortValidations(validations);\n  const mergedConfig = Object.assign({}, globalConfig, config); // create protected state for cases when the state branch does not exist yet.\n  // This protects when using the OptionsAPI as the data is bound after the setup method\n\n  const nestedState = key ? computed(() => {\n    const s = unref(state);\n    return s ? unref(s[key]) : undefined;\n  }) : state; // cache the external results, so we can revert back to them\n\n  const cachedExternalResults = Object.assign({}, unref(externalResults) || {});\n  const nestedExternalResults = computed(() => {\n    const results = unref(externalResults);\n    if (!key) return results;\n    return results ? unref(results[key]) : undefined;\n  }); // Use rules for the current state fragment and validate it\n\n  const results = createValidationResults(rules, nestedState, key, resultsCache, path, mergedConfig, instance, nestedExternalResults, state); // Use nested keys to repeat the process\n  // *WARN*: This is recursive\n\n  const nestedResults = collectNestedValidationResults(nestedValidators, nestedState, path, resultsCache, mergedConfig, instance, nestedExternalResults);\n  const $validationGroups = {};\n\n  if (validationGroups) {\n    Object.entries(validationGroups).forEach(_ref2 => {\n      let [key, group] = _ref2;\n      $validationGroups[key] = {\n        $invalid: gatherBooleanGroupProperties(group, nestedResults, '$invalid'),\n        $error: gatherBooleanGroupProperties(group, nestedResults, '$error'),\n        $pending: gatherBooleanGroupProperties(group, nestedResults, '$pending'),\n        $errors: gatherArrayGroupProperties(group, nestedResults, '$errors'),\n        $silentErrors: gatherArrayGroupProperties(group, nestedResults, '$silentErrors')\n      };\n    });\n  } // Collect and merge this level validation results\n  // with all nested validation results\n\n\n  const {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  } = createMetaFields(results, nestedResults, childResults);\n  /**\n   * If we have no `key`, this is the top level state\n   * We dont need `$model` there.\n   */\n\n  const $model = key ? computed({\n    get: () => unref(nestedState),\n    set: val => {\n      $dirty.value = true;\n      const s = unref(state);\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n\n      if (isRef(s[key])) {\n        s[key].value = val;\n      } else {\n        s[key] = val;\n      }\n    }\n  }) : null;\n\n  if (key && mergedConfig.$autoDirty) {\n    watch(nestedState, () => {\n      if (!$dirty.value) $touch();\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n    }, {\n      flush: 'sync'\n    });\n  }\n\n  function $getResultsForChild(key) {\n    return (childResults.value || {})[key];\n  }\n\n  function $clearExternalResults() {\n    if (isRef(externalResults)) {\n      externalResults.value = cachedExternalResults;\n    } else {\n      // if the external results state was empty, we need to delete every property, one by one\n      if (Object.keys(cachedExternalResults).length === 0) {\n        Object.keys(externalResults).forEach(k => {\n          delete externalResults[k];\n        });\n      } else {\n        // state was not empty, so we just assign it back into the current state\n        Object.assign(externalResults, cachedExternalResults);\n      }\n    }\n  }\n\n  return reactive(Object.assign({}, results, {\n    // NOTE: The order here is very important, since we want to override\n    // some of the *results* meta fields with the collective version of it\n    // that includes the results of nested state validation results\n    $model,\n    $dirty,\n    $error,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $pending,\n    $touch,\n    $reset,\n    $path: path || ROOT_PATH,\n    $silentErrors,\n    $validate,\n    $commit\n  }, childResults && {\n    $getResultsForChild,\n    $clearExternalResults,\n    $validationGroups\n  }, nestedResults));\n}\n\nclass ResultsStorage {\n  constructor() {\n    this.storage = new Map();\n  }\n  /**\n   * Stores a validation result, and its rules by its path\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {ValidationResult} result\n   */\n\n\n  set(path, rules, result) {\n    this.storage.set(path, {\n      rules,\n      result\n    });\n  }\n  /**\n   * Check if the stored `results` for the provided `path` have the same `rules` compared to 'storedRules'\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {Object<NormalizedValidator>} storedRules\n   * @return {Boolean}\n   */\n\n\n  checkRulesValidity(path, rules, storedRules) {\n    const storedRulesKeys = Object.keys(storedRules);\n    const newRulesKeys = Object.keys(rules);\n    if (newRulesKeys.length !== storedRulesKeys.length) return false;\n    const hasAllValidators = newRulesKeys.every(ruleKey => storedRulesKeys.includes(ruleKey));\n    if (!hasAllValidators) return false;\n    return newRulesKeys.every(ruleKey => {\n      if (!rules[ruleKey].$params) return true;\n      return Object.keys(rules[ruleKey].$params).every(paramKey => {\n        // make sure to unwrap before comparing\n        return unref(storedRules[ruleKey].$params[paramKey]) === unref(rules[ruleKey].$params[paramKey]);\n      });\n    });\n  }\n  /**\n   * Returns the matched result if catche is valid\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @return {{$partial: boolean, $dirty: Ref<Boolean>, $unwatch: function}|undefined|ValidationResult}\n   */\n\n\n  get(path, rules) {\n    const storedRuleResultPair = this.storage.get(path);\n    if (!storedRuleResultPair) return undefined;\n    const {\n      rules: storedRules,\n      result\n    } = storedRuleResultPair;\n    const isValidCache = this.checkRulesValidity(path, rules, storedRules);\n    const $unwatch = result.$unwatch ? result.$unwatch : () => ({});\n    if (!isValidCache) return {\n      $dirty: result.$dirty,\n      $partial: true,\n      $unwatch\n    };\n    return result;\n  }\n\n}\n\nconst CollectFlag = {\n  COLLECT_ALL: true,\n  COLLECT_NONE: false\n};\nconst VuelidateInjectChildResults = Symbol('vuelidate#injectChildResults');\nconst VuelidateRemoveChildResults = Symbol('vuelidate#removeChildResults');\n/**\n * Create helpers to collect validation state from child components\n * @param {Object} params\n * @param {String | Number | Boolean} params.$scope - Parent component scope\n * @return {{sendValidationResultsToParent: function[], childResults: ComputedRef<Object>, removeValidationResultsFromParent: function[]}}\n */\n\nfunction nestedValidations(_ref) {\n  let {\n    $scope,\n    instance\n  } = _ref;\n  const childResultsRaw = {};\n  const childResultsKeys = ref([]);\n  const childResults = computed(() => childResultsKeys.value.reduce((results, key) => {\n    results[key] = unref(childResultsRaw[key]);\n    return results;\n  }, {}));\n  /**\n   * Allows children to send validation data up to their parent.\n   * @param {Object} results - the results\n   * @param {Object} args\n   * @param {String} args.$registerAs - the $registeredAs key\n   * @param {String | Number | Boolean} args.$scope - the $scope key\n   */\n\n  function injectChildResultsIntoParent(results, _ref2) {\n    let {\n      $registerAs: key,\n      $scope: childScope,\n      $stopPropagation\n    } = _ref2;\n    if ($stopPropagation || $scope === CollectFlag.COLLECT_NONE || childScope === CollectFlag.COLLECT_NONE || $scope !== CollectFlag.COLLECT_ALL && $scope !== childScope) return;\n    childResultsRaw[key] = results;\n    childResultsKeys.value.push(key);\n  } // combine with other `injectChildResultsIntoParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateInjectInstances = [].concat(instance.__vuelidateInjectInstances || [], injectChildResultsIntoParent);\n  /**\n   * Allows children to remove the validation data from their parent, before getting destroyed.\n   * @param {String} key - the registeredAs key\n   */\n\n  function removeChildResultsFromParent(key) {\n    // remove the key\n    childResultsKeys.value = childResultsKeys.value.filter(childKey => childKey !== key); // remove the stored data for the key\n\n    delete childResultsRaw[key];\n  } // combine with other `removeChildResultsFromParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateRemoveInstances = [].concat(instance.__vuelidateRemoveInstances || [], removeChildResultsFromParent); // inject the `injectChildResultsIntoParent` method, into the current scope\n\n  const sendValidationResultsToParent = inject(VuelidateInjectChildResults, []); // provide to all of its children the send results to parent function\n\n  provide(VuelidateInjectChildResults, instance.__vuelidateInjectInstances);\n  const removeValidationResultsFromParent = inject(VuelidateRemoveChildResults, []); // provide to all of its children the remove results  function\n\n  provide(VuelidateRemoveChildResults, instance.__vuelidateRemoveInstances);\n  return {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  };\n}\n\n/**\n * Helper proxy for instance property access. It makes every reference\n * reactive for the validation function\n * @param target\n * @return {*|ComputedRef<*>}\n */\n\nfunction ComputedProxyFactory(target) {\n  return new Proxy(target, {\n    get(target, prop) {\n      return typeof target[prop] === 'object' ? ComputedProxyFactory(target[prop]) : computed(() => target[prop]);\n    }\n\n  });\n}\n\n/**\n * @typedef GlobalConfig\n * @property {String} [$registerAs] - Config Object\n * @property {String | Number | Symbol} [$scope] - A scope to limit child component registration\n * @property {Boolean} [$stopPropagation] - Tells a Vue component to stop sending its results up to the parent\n * @property {Ref<Object>} [$externalResults] - External error messages, like from server validation.\n * @property {Boolean} [$autoDirty] - Should the form watch for state changed, and automatically set `$dirty` to true.\n * @property {Boolean} [$lazy] - Should the validations be lazy, and run only after they are dirty\n * @property {Boolean} [$rewardEarly] - Once valid, re-runs property validators only on manual calls of $commit\n */\n\n/**\n * Composition API compatible Vuelidate\n * Use inside the `setup` lifecycle hook\n * @param {Object | GlobalConfig} [validations] - Validations Object or the globalConfig.\n * @param {Object} [state] - State object - required if `validations` is a validation object.\n * @param {GlobalConfig} [globalConfig] - Config Object\n * @return {ComputedRef<*>}\n */\n\nlet uid = 0;\nfunction useVuelidate(validations, state) {\n  var _getCurrentInstance;\n\n  let globalConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // if we pass only one argument, its most probably the globalConfig.\n  // This use case is so parents can just collect results of child forms.\n  if (arguments.length === 1) {\n    globalConfig = validations;\n    validations = undefined;\n    state = undefined;\n  }\n\n  let {\n    $registerAs,\n    $scope = CollectFlag.COLLECT_ALL,\n    $stopPropagation,\n    $externalResults,\n    currentVueInstance\n  } = globalConfig;\n  const instance = currentVueInstance || ((_getCurrentInstance = getCurrentInstance()) === null || _getCurrentInstance === void 0 ? void 0 : _getCurrentInstance.proxy);\n  const componentOptions = instance ? instance.$options : {}; // if there is no registration name, add one.\n\n  if (!$registerAs) {\n    uid += 1;\n    $registerAs = `_vuelidate_${uid}`;\n  }\n\n  const validationResults = ref({});\n  const resultsCache = new ResultsStorage();\n  const {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  } = instance ? nestedValidations({\n    $scope,\n    instance\n  }) : {\n    childResults: ref({})\n  }; // Options API\n\n  if (!validations && componentOptions.validations) {\n    const rules = componentOptions.validations;\n    state = ref({});\n    onBeforeMount(() => {\n      // Delay binding state to validations defined with the Options API until mounting, when the data\n      // has been attached to the component instance. From that point on it will be reactive.\n      state.value = instance;\n      watch(() => isFunction(rules) ? rules.call(state.value, new ComputedProxyFactory(state.value)) : rules, validations => {\n        validationResults.value = setValidations({\n          validations,\n          state,\n          childResults,\n          resultsCache,\n          globalConfig,\n          instance,\n          externalResults: $externalResults || instance.vuelidateExternalResults\n        });\n      }, {\n        immediate: true\n      });\n    });\n    globalConfig = componentOptions.validationsConfig || globalConfig;\n  } else {\n    const validationsWatchTarget = isRef(validations) || isProxy(validations) ? validations // wrap plain objects in a reactive, so we can track changes if they have computed in them.\n    : reactive(validations || {});\n    watch(validationsWatchTarget, newValidationRules => {\n      validationResults.value = setValidations({\n        validations: newValidationRules,\n        state,\n        childResults,\n        resultsCache,\n        globalConfig,\n        instance: instance !== null && instance !== void 0 ? instance : {},\n        externalResults: $externalResults\n      });\n    }, {\n      immediate: true\n    });\n  }\n\n  if (instance) {\n    // send all the data to the parent when the function is invoked inside setup.\n    sendValidationResultsToParent.forEach(f => f(validationResults, {\n      $registerAs,\n      $scope,\n      $stopPropagation\n    })); // before this component is destroyed, remove all the data from the parent.\n\n    onBeforeUnmount(() => removeValidationResultsFromParent.forEach(f => f($registerAs)));\n  }\n\n  return computed(() => {\n    return Object.assign({}, unref(validationResults.value), childResults.value);\n  });\n}\n\nexport { CollectFlag, useVuelidate as default, useVuelidate };\n","import { unref } from 'vue-demi';\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\n/**\n * Returns a standard ValidatorObject\n * Wraps a plain function into a ValidatorObject\n * @param {NormalizedValidator|Function} validator\n * @return {NormalizedValidator}\n */\n\nfunction normalizeValidatorObject(validator) {\n  return isFunction(validator.$validator) ? Object.assign({}, validator) : {\n    $validator: validator\n  };\n}\nfunction isPromise(object) {\n  return isObject(object) && isFunction(object.then);\n}\n/**\n * Unwraps a ValidatorResponse object, into a boolean.\n * @param {ValidatorResponse} result\n * @return {boolean}\n */\n\nfunction unwrapValidatorResponse(result) {\n  if (typeof result === 'object') return result.$valid;\n  return result;\n}\n/**\n * Unwraps a `NormalizedValidator` object, returning its validator function.\n * @param {NormalizedValidator | Function} validator\n * @return {function}\n */\n\nfunction unwrapNormalizedValidator(validator) {\n  return validator.$validator || validator;\n}\n\n/**\n * Allows attaching parameters to a validator\n * @param {Object} $params\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withParams($params, $validator) {\n  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to \"withParams\" should be an object, provided ${typeof $params}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$params = Object.assign({}, validatorObj.$params || {}, $params);\n  return validatorObj;\n}\n\n/**\n * @callback MessageCallback\n * @param {Object} params\n * @return String\n */\n\n/**\n * Attaches a message to a validator\n * @param {MessageCallback | String} $message\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withMessage($message, $validator) {\n  if (!isFunction($message) && typeof unref($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to \"withMessage\" should be string or a function returning a string, provided ${typeof $message}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$message = $message;\n  return validatorObj;\n}\n\n/**\n * @typedef {function(*): Promise<boolean|ValidatorResponse>} asyncValidator\n */\n\n/**\n * @typedef {Ref<*>[]|function(*): *} watchTargets\n */\n\n/**\n * Wraps validators that returns a Promise.\n * @param {asyncValidator} $validator\n * @param {watchTargets} $watchTargets\n * @return {{$async: boolean, $validator: asyncValidator, $watchTargets: watchTargets}}\n */\n\nfunction withAsync($validator) {\n  let $watchTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const validatorObj = normalizeValidatorObject($validator);\n  return Object.assign({}, validatorObj, {\n    $async: true,\n    $watchTargets\n  });\n}\n\nfunction forEach(validators) {\n  return {\n    $validator(collection) {\n      for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        others[_key - 1] = arguments[_key];\n      }\n\n      // go over the collection. It can be a ref as well.\n      return unref(collection).reduce((previous, collectionItem, index) => {\n        // go over each property\n        const collectionEntryResult = Object.entries(collectionItem).reduce((all, _ref) => {\n          let [property, $model] = _ref;\n          // get the validators for this property\n          const innerValidators = validators[property] || {}; // go over each validator and run it\n\n          const propertyResult = Object.entries(innerValidators).reduce((all, _ref2) => {\n            let [validatorName, currentValidator] = _ref2;\n            // extract the validator. Supports simple and extended validators.\n            const validatorFunction = unwrapNormalizedValidator(currentValidator); // Call the validator, passing the VM as this, the value, current iterated object and the rest.\n\n            const $response = validatorFunction.call(this, $model, collectionItem, index, ...others); // extract the valid from the result\n\n            const $valid = unwrapValidatorResponse($response); // store the entire response for later\n\n            all.$data[validatorName] = $response;\n            all.$data.$invalid = !$valid || !!all.$data.$invalid;\n            all.$data.$error = all.$data.$invalid; // if not valid, get the $message\n\n            if (!$valid) {\n              let $message = currentValidator.$message || '';\n              const $params = currentValidator.$params || {}; // If $message is a function, we call it with the appropriate parameters\n\n              if (typeof $message === 'function') {\n                $message = $message({\n                  $pending: false,\n                  $invalid: !$valid,\n                  $params,\n                  $model,\n                  $response\n                });\n              } // save the error object\n\n\n              all.$errors.push({\n                $property: property,\n                $message,\n                $params,\n                $response,\n                $model,\n                $pending: false,\n                $validator: validatorName\n              });\n            }\n\n            return {\n              $valid: all.$valid && $valid,\n              $data: all.$data,\n              $errors: all.$errors\n            };\n          }, {\n            $valid: true,\n            $data: {},\n            $errors: []\n          });\n          all.$data[property] = propertyResult.$data;\n          all.$errors[property] = propertyResult.$errors;\n          return {\n            $valid: all.$valid && propertyResult.$valid,\n            $data: all.$data,\n            $errors: all.$errors\n          };\n        }, {\n          $valid: true,\n          $data: {},\n          $errors: {}\n        });\n        return {\n          $valid: previous.$valid && collectionEntryResult.$valid,\n          $data: previous.$data.concat(collectionEntryResult.$data),\n          $errors: previous.$errors.concat(collectionEntryResult.$errors)\n        };\n      }, {\n        $valid: true,\n        $data: [],\n        $errors: []\n      });\n    },\n\n    // collect all the validation errors into a 2 dimensional array, for each entry in the collection, you have an array of error messages.\n    $message: _ref3 => {\n      let {\n        $response\n      } = _ref3;\n      return $response ? $response.$errors.map(context => {\n        return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);\n      }) : [];\n    }\n  };\n}\n\n// \"required\" core, used in almost every validator to allow empty values\nconst req = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return !!value.length;\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  if (value === false) {\n    return true;\n  }\n\n  if (value instanceof Date) {\n    // invalid date won't pass\n    return !isNaN(value.getTime());\n  }\n\n  if (typeof value === 'object') {\n    for (let _ in value) return true;\n\n    return false;\n  }\n\n  return !!String(value).length;\n};\n/**\n * Returns the length of an arbitrary value\n * @param {Array|Object|String} value\n * @return {number}\n */\n\nconst len = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return value.length;\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length;\n  }\n\n  return String(value).length;\n};\n/**\n * Regex based validator template\n * @param {RegExp} expr\n * @return {function(*=): boolean}\n */\n\nfunction regex() {\n  for (var _len = arguments.length, expr = new Array(_len), _key = 0; _key < _len; _key++) {\n    expr[_key] = arguments[_key];\n  }\n\n  return value => {\n    value = unref(value);\n    return !req(value) || expr.every(reg => reg.test(value));\n  };\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  withParams: withParams,\n  withMessage: withMessage,\n  withAsync: withAsync,\n  forEach: forEach,\n  req: req,\n  len: len,\n  regex: regex,\n  unwrap: unref,\n  unwrapNormalizedValidator: unwrapNormalizedValidator,\n  unwrapValidatorResponse: unwrapValidatorResponse,\n  normalizeValidatorObject: normalizeValidatorObject\n});\n\nvar alpha$1 = regex(/^[a-zA-Z]*$/);\n\n/**\n * Validate if value is alphabetical string.\n * @type {NormalizedValidator}\n */\n\nvar alpha = {\n  $validator: alpha$1,\n  $message: 'The value is not alphabetical',\n  $params: {\n    type: 'alpha'\n  }\n};\n\nvar alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);\n\n/**\n * Validate if value is alpha-numeric string.\n * @type {NormalizedValidator}\n */\n\nvar alphaNum = {\n  $validator: alphaNum$1,\n  $message: 'The value must be alpha-numeric',\n  $params: {\n    type: 'alphaNum'\n  }\n};\n\nvar numeric$1 = regex(/^\\d*(\\.\\d+)?$/);\n\n/**\n * Check whether a value is numeric.\n * @type NormalizedValidator\n */\n\nvar numeric = {\n  $validator: numeric$1,\n  $message: 'Value must be numeric',\n  $params: {\n    type: 'numeric'\n  }\n};\n\n/**\n * Check if a numeric value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {function(*=): boolean}\n */\n\nfunction between$1 (min, max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +unref(min) <= +value && +unref(max) >= +value;\n}\n\n/**\n * Checks if a value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {NormalizedValidator}\n */\n\nfunction between (min, max) {\n  return {\n    $validator: between$1(min, max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The value must be between ${$params.min} and ${$params.max}`;\n    },\n    $params: {\n      min,\n      max,\n      type: 'between'\n    }\n  };\n}\n\nconst emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nvar email$1 = regex(emailRegex);\n\n/**\n * Validate if value is an email.\n * @type {NormalizedValidator}\n */\n\nvar email = {\n  $validator: email$1,\n  $message: 'Value is not a valid email address',\n  $params: {\n    type: 'email'\n  }\n};\n\n/**\n * Check if a string is an IP Address\n * @param {String} value\n * @returns {boolean}\n */\n\nfunction ipAddress$1 (value) {\n  if (!req(value)) {\n    return true;\n  }\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const nibbles = value.split('.');\n  return nibbles.length === 4 && nibbles.every(nibbleValid);\n}\n\nconst nibbleValid = nibble => {\n  if (nibble.length > 3 || nibble.length === 0) {\n    return false;\n  }\n\n  if (nibble[0] === '0' && nibble !== '0') {\n    return false;\n  }\n\n  if (!nibble.match(/^\\d+$/)) {\n    return false;\n  }\n\n  const numeric = +nibble | 0;\n  return numeric >= 0 && numeric <= 255;\n};\n\n/**\n * Validate if value is an ipAddress string.\n * @type {NormalizedValidator}\n */\n\nvar ipAddress = {\n  $validator: ipAddress$1,\n  $message: 'The value is not a valid IP address',\n  $params: {\n    type: 'ipAddress'\n  }\n};\n\n/**\n * Check if value is a properly formatted Mac Address.\n * @param {String | Ref<String>} [separator]\n * @returns {function(*): boolean}\n */\n\nfunction macAddress$1 () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':';\n  return value => {\n    separator = unref(separator);\n\n    if (!req(value)) {\n      return true;\n    }\n\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;\n    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);\n  };\n}\n\nconst hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);\n\n/**\n * Validate if value is a valid Mac Address string.\n * @returns {NormalizedValidator}\n */\n\nfunction macAddress (separator) {\n  return {\n    $validator: macAddress$1(separator),\n    $message: 'The value is not a valid MAC Address',\n    $params: {\n      type: 'macAddress'\n    }\n  };\n}\n\n/**\n * Check if provided value has a maximum length\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction maxLength$1 (length) {\n  return value => !req(value) || len(value) <= unref(length);\n}\n\n/**\n * Validate the max length of a string.\n * @param {Number} max\n * @return {NormalizedValidator}\n */\n\nfunction maxLength (max) {\n  return {\n    $validator: maxLength$1(max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The maximum length allowed is ${$params.max}`;\n    },\n    $params: {\n      max,\n      type: 'maxLength'\n    }\n  };\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction minLength$1 (length) {\n  return value => !req(value) || len(value) >= unref(length);\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minLength (min) {\n  return {\n    $validator: minLength$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `This field should be at least ${$params.min} characters long`;\n    },\n    $params: {\n      min,\n      type: 'minLength'\n    }\n  };\n}\n\n/**\n * Validates if a value is empty.\n * @param {String | Array | Date | Object} value\n * @returns {boolean}\n */\n\nfunction required$1 (value) {\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  return req(value);\n}\n\n/**\n * Check if a value is empty or not.\n * @type {NormalizedValidator}\n */\n\nvar required = {\n  $validator: required$1,\n  $message: 'Value is required',\n  $params: {\n    type: 'required'\n  }\n};\n\nconst validate$1 = (prop, val) => prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredIf$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate$1(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate$1(result, value);\n  };\n}\n\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredIf (prop) {\n  return {\n    $validator: requiredIf$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredIf',\n      prop\n    }\n  };\n}\n\nconst validate = (prop, val) => !prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n/**\n * Returns required if the passed property is falsy.\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredUnless$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate(result, value);\n  };\n}\n\n/**\n * Returns required unless the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredUnless (prop) {\n  return {\n    $validator: requiredUnless$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredUnless',\n      prop\n    }\n  };\n}\n\n/**\n * Check if two values are identical.\n * @param {*} equalTo\n * @return {function(*=): boolean}\n */\n\nfunction sameAs$1 (equalTo) {\n  return value => unref(value) === unref(equalTo);\n}\n\n/**\n * Check if two values are identical\n * @param {*} equalTo\n * @param {String} [otherName]\n * @return {NormalizedValidator}\n */\n\nfunction sameAs (equalTo) {\n  let otherName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'other';\n  return {\n    $validator: sameAs$1(equalTo),\n    $message: _ref => {\n      return `The value must be equal to the ${otherName} value`;\n    },\n    $params: {\n      equalTo,\n      otherName,\n      type: 'sameAs'\n    }\n  };\n}\n\n/**\n * Regex taken from {@link https://gist.github.com/dperini/729294}\n */\n\nconst urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar url$1 = regex(urlRegex);\n\n/**\n * Check if a value is a url\n * @type {NormalizedValidator}\n */\n\nvar url = {\n  $validator: url$1,\n  $message: 'The value is not a valid URL address',\n  $params: {\n    type: 'url'\n  }\n};\n\nfunction _await$1(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction syncOr(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, false);\n  };\n}\n\nfunction asyncOr(validators) {\n  return function () {\n    const _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(function (valid, fn) {\n      return _await$1(valid, function (r) {\n        return unwrapValidatorResponse(r) ? r : unwrapNormalizedValidator(fn).apply(_this, args);\n      });\n    }, Promise.resolve(false));\n  };\n}\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction or$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {NormalizedValidator}\n */\n\nfunction or () {\n  return withParams({\n    type: 'or'\n  }, withMessage('The value does not match any of the provided validators', or$1(...arguments)));\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n/**\n *\n * @param validators\n * @return {function(...[*]=): Promise<boolean>}\n */\n\n\nfunction syncAnd(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (!unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, true);\n  };\n}\n\nfunction asyncAnd(validators) {\n  return function () {\n    const _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(function (valid, fn) {\n      return _await(valid, function (r) {\n        return unwrapValidatorResponse(r) ? unwrapNormalizedValidator(fn).apply(_this, args) : r;\n      });\n    }, Promise.resolve(true));\n  };\n}\n/**\n * Returns true when all validators are truthy\n * @param {...(NormalizedValidator | Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction and$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Validate if all validators match.\n * @param {...*} validators\n * @returns {NormalizedValidator}\n */\n\nfunction and () {\n  return withParams({\n    type: 'and'\n  }, withMessage('The value does not match all of the provided validators', and$1(...arguments)));\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {function(*=, *=): boolean}\n */\n\nfunction not$1 (validator) {\n  return function (value, vm) {\n    if (!req(value)) return true;\n    const response = unwrapNormalizedValidator(validator).call(this, value, vm);\n    if (!isPromise(response)) return !unwrapValidatorResponse(response);\n    return response.then(r => !unwrapValidatorResponse(r));\n  };\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {NormalizedValidator}\n */\n\nfunction not (validator) {\n  return {\n    $validator: not$1(validator),\n    $message: `The value does not match the provided validator`,\n    $params: {\n      type: 'not'\n    }\n  };\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {function(*=): boolean}\n */\n\nfunction minValue$1 (min) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value >= +unref(min);\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minValue (min) {\n  return {\n    $validator: minValue$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The minimum value allowed is ${$params.min}`;\n    },\n    $params: {\n      min,\n      type: 'minValue'\n    }\n  };\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @returns {function(*=): boolean}\n */\n\nfunction maxValue$1 (max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value <= +unref(max);\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @return {NormalizedValidator}\n */\n\nvar maxValue = (max => ({\n  $validator: maxValue$1(max),\n  $message: _ref => {\n    let {\n      $params\n    } = _ref;\n    return `The maximum value allowed is ${$params.max}`;\n  },\n  $params: {\n    max,\n    type: 'maxValue'\n  }\n}));\n\n// ^-[0-9]+$ - only for negative integer (minus sign without at least 1 digit is not a number)\n\nvar integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);\n\n/**\n * Validate if value is integer.\n * @type {NormalizedValidator}\n */\n\nvar integer = {\n  $validator: integer$1,\n  $message: 'Value is not an integer',\n  $params: {\n    type: 'integer'\n  }\n};\n\nvar decimal$1 = regex(/^[-]?\\d*(\\.\\d+)?$/);\n\n/**\n * Validate if value is decimal number.\n * @type {NormalizedValidator}\n */\n\nvar decimal = {\n  $validator: decimal$1,\n  $message: 'Value must be decimal',\n  $params: {\n    type: 'decimal'\n  }\n};\n\n/**\n * Creates a translatable version of `withMessage` helper.\n * @param {function} t - the translation function of your choice\n * @param {function} [messagePath] - a function to generate the message path, passed to `t` for each message. By default it is `validations.${$validator}`\n * @param {function} [messageParams] - a function to augment the params, passed to `t` for each message.\n */\n\nfunction createI18nMessage(_ref) {\n  let {\n    t,\n    messagePath = _ref2 => {\n      let {\n        $validator\n      } = _ref2;\n      return `validations.${$validator}`;\n    },\n    messageParams = params => params\n  } = _ref;\n  return function withI18nMessage(validator) {\n    let {\n      withArguments = false,\n      messagePath: localMessagePath = messagePath,\n      messageParams: localMessageParams = messageParams\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    function message(props) {\n      return t(localMessagePath(props), localMessageParams(Object.assign({\n        model: props.$model,\n        property: props.$property,\n        pending: props.$pending,\n        invalid: props.$invalid,\n        response: props.$response,\n        validator: props.$validator,\n        propertyPath: props.$propertyPath\n      }, props.$params)));\n    }\n\n    if (withArguments && typeof validator === 'function') {\n      return function () {\n        return withMessage(message, validator(...arguments));\n      };\n    }\n\n    return withMessage(message, validator);\n  };\n}\n\nexport { alpha, alphaNum, and, between, createI18nMessage, decimal, email, common as helpers, integer, ipAddress, macAddress, maxLength, maxValue, minLength, minValue, not, numeric, or, required, requiredIf, requiredUnless, sameAs, url };\n","/*! DataTables 1.10.18\n * ©2008-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.18\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t}\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( $.isArray( data ) && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t// listeners to do this - only need to update the empty table item here\n\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t}\n\t\n\t\t_fnSaveState( settings );\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\t// Second loop once the first is done for events\n\t\t\tthis.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\t\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthis.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector );\n\t\tvar rows = this.rows( rowSelector );\n\t\tvar a, i, ien, j, jen;\n\t\n\t\tthis.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}, 1 );\n\t\n\t    // Now pass through the cell selector for options\n\t    var cells = this.cells( a, opts );\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.18\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n","import axios from \"axios\";\n\n// GET ALL BACKGROUNDS\nasync function getAll() {\n    return await axios\n    .get(`/api/classification/background/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET BACKGROUND BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/classification/background/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW BACKGROUND\nasync function store(formData) {\n    return await axios\n    .post(`/api/classification/background/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A BACKGROUND\nasync function drop(id){\n    return await axios\n    .delete(`/api/classification/background/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A BACKGROUND\nasync function update(formData) {\n    return await axios\n    .post(`/api/classification/background/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL PRODUCTION AREAS\nasync function getAll() {\n    return await axios\n    .get(`/api/classification/production-area/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET PRODUCTION AREA BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/classification/production-area/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW PRODUCTION AREA\nasync function store(formData) {\n    return await axios\n    .post(`/api/classification/production-area/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A PRODUCTION AREA\nasync function drop(id){\n    return await axios\n    .delete(`/api/classification/production-area/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A PRODUCTION AREA\nasync function update(formData) {\n    return await axios\n    .post(`/api/classification/production-area/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL SECTIONS\nasync function getAll() {\n    return await axios\n    .get(`/api/classification/section/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET SECTION BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/classification/section/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW SECTION\nasync function store(formData) {\n    return await axios\n    .post(`/api/classification/section/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A SECTION\nasync function drop(id){\n    return await axios\n    .delete(`/api/classification/section/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A SECTION\nasync function update(formData) {\n    return await axios\n    .post(`/api/classification/section/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL CONSERVATION TIMES\nasync function getAll() {\n    return await axios\n    .get(`/api/container/conservation-time/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET CONSERVATION TIME BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/container/conservation-time/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW CONSERVATION TIME\nasync function store(formData) {\n    return await axios\n    .post(`/api/container/conservation-time/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A CONSERVATION TIME\nasync function drop(id){\n    return await axios\n    .delete(`/api/container/conservation-time/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A CONSERVATION TIME\nasync function update(formData) {\n    return await axios\n    .post(`/api/container/conservation-time/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL CONSERVATION TYPES\nasync function getAll() {\n    return await axios\n    .get(`/api/container/conservation-type/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET CONSERVATION TYPE BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/container/conservation-type/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW CONSERVATION TYPE\nasync function store(formData) {\n    return await axios\n    .post(`/api/container/conservation-type/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A CONSERVATION TYPE\nasync function drop(id){\n    return await axios\n    .delete(`/api/container/conservation-type/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A CONSERVATION TYPE\nasync function update(formData) {\n    return await axios\n    .post(`/api/container/conservation-type/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL DOCUMENT VALUES\nasync function getAll() {\n    return await axios\n    .get(`/api/container/document-value/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET DOCUMENT VALUE BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/container/document-value/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW DOCUMENT VALUE\nasync function store(formData) {\n    return await axios\n    .post(`/api/container/document-value/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A DOCUMENT VALUE\nasync function drop(id){\n    return await axios\n    .delete(`/api/container/document-value/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A DOCUMENT VALUE\nasync function update(formData) {\n    return await axios\n    .post(`/api/container/document-value/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL INFORMATION TYPES\nasync function getAll() {\n    return await axios\n    .get(`/api/container/information-type/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET INFORMATION TYPE BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/container/information-type/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW INFORMATION TYPE\nasync function store(formData) {\n    return await axios\n    .post(`/api/container/information-type/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A INFORMATION TYPE\nasync function drop(id){\n    return await axios\n    .delete(`/api/container/information-type/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A INFORMATION TYPE\nasync function update(formData) {\n    return await axios\n    .post(`/api/container/information-type/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL SELECTION TECHNIQUES\nasync function getAll() {\n    return await axios\n    .get(`/api/container/selection-technique/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET SELECTION TECHNIQUE BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/container/selection-technique/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW SELECTION TECHNIQUE\nasync function store(formData) {\n    return await axios\n    .post(`/api/container/selection-technique/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A SELECTION TECHNIQUE\nasync function drop(id){\n    return await axios\n    .delete(`/api/container/selection-technique/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A SELECTION TECHNIQUE\nasync function update(formData) {\n    return await axios\n    .post(`/api/container/selection-technique/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import axios from \"axios\";\n\n// GET ALL DOCUMENT TYPES\nasync function getAll() {\n    return await axios\n    .get(`/api/document-type/get-all`, \n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// GET DOCUMENT TYPE BY ID\nasync function getOne(id) {\n    return await axios\n    .get(`/api/document-type/get/${id}`,\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, CREATE A NEW DOCUMENT TYPE\nasync function store(formData) {\n    return await axios\n    .post(`/api/document-type/store`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// DELETE A DOCUMENT TYPE\nasync function drop(id){\n    return await axios\n    .delete(`/api/document-type/delete/${id}`\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n}\n// POST, UPDATE A DOCUMENT TYPE\nasync function update(formData) {\n    return await axios\n    .post(`/api/document-type/update`,formData, {\n      headers: { 'content-type': 'multipart/form-data' },\n    }\n    )\n    .then((res) => {\n      if (res.status != 200) throw new Error(\"Response Failed\");\n      return res.data;\n    })  \n  }\n\nexport default {getAll, getOne, store, drop, update}","import script from \"./FormCatalogs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormCatalogs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"card-title\" v-if=\"route.params.name === 'tipos-documentos'\">\n        <h4 v-if=\"!edit\">Agregar nuevo tipo de documento</h4>\n        <h4 v-if=\"edit\">Editar tipo de documento</h4>\n    </div>\n    <div v-else class=\"card-title\">\n        <div v-if=\"!edit\" class=\"d-flex\">\n            <h4 v-if=\"!edit\">Agregar {{btn}}</h4>\n        </div>\n        <div v-if=\"edit\" class=\"d-flex\">\n            <h4 v-if=\"edit\">Editar {{btn}}</h4>\n        </div>\n        \n    </div>\n    <form class=\"needs-validation\" @submit.prevent=\"onSubmit\" novalidate>\n        <div class=\"mb-3\">\n            <label class=\"form-label\"\n                >Código</label\n            >\n            <div :class=\"{ valid: !v$.$error && v$.$dirty, error: v$.$error }\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"code\"\n                    placeholder=\"Ingrese\"\n                    minlength=\"1\"\n                    maxlength=\"10\"\n                    v-model=\"v$.code.$model\"\n                    required\n                />\n                <div v-for=\"(error, index) in v$.code.$errors\" :key=\"index\" class=\"invalid-feedback d-block\">\n                    {{ error.$message }}\n                </div>\n            </div>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\"\n                >Nombre</label\n            >\n            <div :class=\"{ valid: !v$.$error && v$.$dirty, error: v$.$error }\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Ingrese\"\n                    minlength=\"5\"\n                    maxlength=\"255\"\n                    v-model=\"v$.name.$model\"\n                    required\n                />\n                <div v-for=\"(error, index) in v$.name.$errors\" :key=\"index\" class=\"invalid-feedback d-block\">\n                    {{ error.$message }}\n                </div>\n            </div>\n        </div>\n        <div class=\"row justify-items-center\">\n            <button v-if=\"!edit\" class=\"btn btn-primary mb-2\" type=\"submit\" @click.prevent=\"addClassification\" :disabled=\"v$.$errors.length > 0 || v$.$silentErrors.length > 0\">\n                AGREGAR\n            </button>\n            <button v-if=\"edit\" class=\"btn btn-primary mb-2\" type=\"submit\" @click.prevent=\"editRequest\" :disabled=\"v$.$errors.length > 0 || v$.$silentErrors.length > 0\">\n                ACTUALIZAR\n            </button>\n            <button class=\"btn btn-light mb-2\" type=\"submit\" @click=\"resetData()\">CANCELAR</button>\n        </div>\n    </form>\n</template>\n\n<script setup>\nimport { ref, toRef, onMounted, reactive, watch} from 'vue';\nimport { useRouter, useRoute } from \"vue-router\";\nimport $ from \"jquery\";\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, email ,minValue, helpers, minLength, maxLength} from '@vuelidate/validators'\n\n// clasificaciones\nimport useFileCatalogsBackgroundAPI from \"@/api/admin/catalogs/classification/background.js\";\nimport useFileCatalogsProductionAPI from \"@/api/admin/catalogs/classification/production-area.js\";\nimport useFileCatalogsSectionAPI from \"@/api/admin/catalogs/classification/section.js\";\n// contenedores\nimport useFileCatalogsTimeAPI from \"@/api/admin/catalogs/container/conservation-time.js\";\nimport useFileCatalogsTypeAPI from \"@/api/admin/catalogs/container/conservation-type.js\";\nimport useFileCatalogsValueAPI from \"@/api/admin/catalogs/container/document-value.js\";\nimport useFileCatalogsInfoAPI from \"@/api/admin/catalogs/container/information-type.js\";\nimport useFileCatalogsSelectionAPI from \"@/api/admin/catalogs/container/selection-technique.js\";\n// tipos de documentos\nimport useFileCatalogsDocumentAPI from \"@/api/admin/catalogs/document-type.js\";\nimport {useToast} from \"vue-toastification\";\n\nconst toast = useToast();\nconst router = useRouter();\nconst route = useRoute();\nconst emit = defineEmits(['update','cancel'])\n\nconst props = defineProps({\n    dataForm: Object,\n    edit: Boolean,\n    param: String\n});\n\n//ReadOnly\nconst dataForm = toRef(props, 'dataForm');\nconst edit = toRef(props, 'edit');\nconst param = toRef(props, 'param');\nconst productionArea = ref([]);\nconst section = ref(\"\");\nconst backGround = ref(\"\");\nconst btn = ref(\"\")\nconst formData = reactive(dataForm);\n\nconst showAll = ref(false);\n    const rules = {\n      code: {\n        required: helpers.withMessage('Este campo no debe estar vacio', required),\n        minLength: helpers.withMessage('Minimo debe ser un caracter', minLength(0)),\n        maxLength: helpers.withMessage('Maximo debe ser 10 caracteres', maxLength(10)),\n      },\n      name: {\n        required: helpers.withMessage('Este campo no debe estar vacio', required),\n        minLength: helpers.withMessage('Minimo debe ser 5 caracteres', minLength(5)),\n        maxLength: helpers.withMessage('Maximo debe ser 255 caracteres', maxLength(255)),\n      },\n    };\n    const state = reactive(dataForm);\n\nconst v$ = useVuelidate(rules, formData);\n \n\n\nconst apisGet = {\n    'tipos-documentos':useFileCatalogsDocumentAPI,\n    fondos: useFileCatalogsBackgroundAPI,\n    secciones: useFileCatalogsSectionAPI,\n    'areas-productoras': useFileCatalogsProductionAPI,\n    'tiempos-conservacion':useFileCatalogsTimeAPI,\n    'tipos-conservacion':useFileCatalogsTypeAPI,\n    'valores-documentales':useFileCatalogsValueAPI,\n    'tipos-informacion':useFileCatalogsInfoAPI,\n    'tecnicas-seleccion':useFileCatalogsSelectionAPI\n}\n\nconst buttonTag = {\n    'tipos-documentos':\" nuevo tipo de Documento\",\n    fondos: \" nuevo fondo\",\n    secciones: \" nueva sección\",\n    'areas-productoras': \" nueva área productora\",\n    'tiempos-conservacion':\" nuevo tiempo de conservación\",\n    'tipos-conservacion':\" nuevo tipo de conservación\",\n    'valores-documentales':\" nuevo valor documental\",\n    'tipos-informacion':\" nuevo tipo de información\",\n    'tecnicas-seleccion':\" nueva técnica de selección\"\n}\n\n\nconst onSubmit = async (values) => {\n    // if(v$.$invalid){\n    //     console.log(\"Es invalido\");\n    //     return\n        \n    // }\n   \n};\n\nonMounted(async () => {\n    await getRequests();\n});\n\nconst addClassification = async () => {\n    onSubmit();\n    const get = apisGet[route.params.name]\n    get.store(formData.value)\n    .then((res) => {\n        toast.success(\"Se ha agregado correctamente\", {\n          timeout: 2000,\n        });\n        emit('update');\n        resetData();\n    })\n    .catch(error => \n        toast.warning(\"No se ha podido agregar\", {\n          timeout: 2000,\n        })\n    );\n    onSubmit();\n};\n\nconst editRequest = async => {\n    onSubmit()\n    const get = apisGet[route.params.name]\n    get.update(formData.value)\n    .then((res) => {\n        toast.success(\"El registro se ha actualizado correctamente\", {\n          timeout: 2000,\n        })\n        emit('update');\n        resetData();\n    })\n    .catch((error) =>{\n        toast.error(\"El registro no se ha actualizado\", {\n          timeout: 2000,\n        });\n    });\n}\n\nfunction resetData(){\n    v$._value.$reset();\n    emit('cancel');\n}\n\n\nconst getRequests = async () => {\n    btn.value = buttonTag[route.params.name]\n\n    const resBackground =  await useFileCatalogsBackgroundAPI.getAll(\"\");\n    backGround.value = resBackground;\n\n    const resSection = await useFileCatalogsProductionAPI.getAll(\"\");\n    productionArea.value = resSection;\n\n    const resProductionArea = await useFileCatalogsSectionAPI.getAll(\"\");\n    section.value = resProductionArea;\n\n};\n\nwatch(  \n    () => route.params.name,\n    (route, oldRoute) => {\n        getRequests();\n    },\n    { deep: true },\n);\n\n\n</script>","import script from \"./TableCatalogs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TableCatalogs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <table\n        id=\"example\"\n        class=\"table table-sm table-striped\"\n        style=\"width: 100%\"\n    ></table>\n    <ConfirmationModal\n        :title=\"'Confirmación de Eliminación'\"\n        :message=\"'Éstas seguro que deseas cancelar ' + tags\"\n        @response=\"confirmationResponse\"\n    ></ConfirmationModal>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch, toRefs, reactive } from \"vue\";\nimport $ from \"jquery\";\nimport { useRouter, useRoute } from \"vue-router\";\n// import ModalEdit from \"../elements/ModalEdit.vue\";\nimport { dataTable, table, row, destroy, draw } from \"datatables\";\nimport { useCatalogsRequests } from \"@/js/composables/admin-apis/useCatalogsRequest.js\";\n// clasificaciones\nimport useFileCatalogsBackgroundAPI from \"@/api/admin/catalogs/classification/background.js\";\nimport useFileCatalogsProductionAPI from \"@/api/admin/catalogs/classification/production-area.js\";\nimport useFileCatalogsSectionAPI from \"@/api/admin/catalogs/classification/section.js\";\n// contenedores\nimport useFileCatalogsTimeAPI from \"@/api/admin/catalogs/container/conservation-time.js\";\nimport useFileCatalogsTypeAPI from \"@/api/admin/catalogs/container/conservation-type.js\";\nimport useFileCatalogsValueAPI from \"@/api/admin/catalogs/container/document-value.js\";\nimport useFileCatalogsInfoAPI from \"@/api/admin/catalogs/container/information-type.js\";\nimport useFileCatalogsSelectionAPI from \"@/api/admin/catalogs/container/selection-technique.js\";\n// tipos de documentos\nimport useFileCatalogsDocumentAPI from \"@/api/admin/catalogs/document-type.js\";\nimport {useToast} from \"vue-toastification\";\nimport { Modal } from \"bootstrap\";\n//Components\nimport ConfirmationModal from \"../../elements/ConfirmationModal.vue\"\n\nconst toast = useToast();\nconst confirmationModal= ref({});\nconst props = defineProps({\n    filesClasification: Object,\n    updated: Boolean,\n});\n\nconst router = useRouter();\nconst route = useRoute();\n\n// const { filesClasification } = toRefs(props)\nconst { updated } = toRefs(props);\nconst emit = defineEmits([\"data\"]);\n\nconst catalogs = ref(\"\");\nconst catalogsId = ref(0);\nconst name = ref(\"\");\nconst fila = ref(\"\");\nconst tags = ref(\"\");\nconst visible = ref(false);\nconst refresh = ref(false);\nconst formData = reactive({\n    id:\"\",\n    name: \"\",\n    code: \"\",\n});\n\nconst apisGet = {\n    'tipos-documentos':useFileCatalogsDocumentAPI,\n    fondos: useFileCatalogsBackgroundAPI,\n    secciones: useFileCatalogsSectionAPI,\n    'areas-productoras': useFileCatalogsProductionAPI,\n    'tiempos-conservacion':useFileCatalogsTimeAPI,\n    'tipos-conservacion':useFileCatalogsTypeAPI,\n    'valores-documentales':useFileCatalogsValueAPI,\n    'tipos-informacion':useFileCatalogsInfoAPI,\n    'tecnicas-seleccion':useFileCatalogsSelectionAPI\n}\n\nconst Tag = {\n    'tipos-documentos':\"el tipo de documento\",\n    fondos: \"el fondo\",\n    secciones: \"la sección\",\n    'areas-productoras': \"el área\",\n    'tiempos-conservacion':\"el tiempo de conservación\",\n    'tipos-conservacion':\"el tipo de conservación\",\n    'valores-documentales':\"el valor documental\",\n    'tipos-informacion':\"tipo de información\",\n    'tecnicas-seleccion':\"la tecnica de selección\"\n}\n\nfunction confirmationResponse(response){\n    confirmationModal.value.hide();\n    if(response)\n        deleteRequests(catalogsId.value);\n}\n\nconst globalTable = ref(\"\");\n\nconst { catalogsColumns } = useCatalogsRequests();\n\n\nonMounted(async () => {\n    getRequests();\n});\n\nconst refreshTable = async() => {\n    globalTable.value = $(\"#example\").DataTable({\n        language: {\n            url: \"//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json\",\n        },\n        data: catalogs.value,\n        columns: catalogsColumns,\n        scrollY: \"372px\",\n        scrollCollapse: true,\n        destroy: true,\n    });\n}\n\nconst createTable = async () => {\n    globalTable.value = $(\"#example\").DataTable({\n        language: {\n            url: \"//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json\",\n        },\n        data: catalogs.value,\n        columns: catalogsColumns,\n        scrollY: \"372px\",\n        scrollCollapse: true,\n        destroy: true,\n    });\n    globalTable.value.on(\"click\", \"#btn_editar\", function () {\n        fila.value = $(this).closest(\"tr\");\n        let catalog = catalogs.value;\n        let catalogsId = parseInt(globalTable.value.rows(fila.value).data()[0].id);\n        let index = catalog.findIndex(x => x.id == catalogsId);\n        formData.id = catalog[index].id;\n        formData.name = catalog[index].name;\n        formData.code = catalog[index].code;\n        emit(\"data\", formData);\n      \n    });\n\n    /* globalTable.value.on(\"click\", \"#btn_borrar\", function(){\n        fila.value = $(this).closest(\"tr\");           \n        const id = parseInt(globalTable.value.rows(fila.value).data()[0].id); \n        catalogsId.value = id;\n        confirmationModal.value.show();\n        // deleteRequests(id);      \n    }); */ \n};\n\nconst getRequests = async (refresh = false) => {\n    const index = route.params.name != undefined && route.params.name != null && route.params.name != \"\" ? route.params.name : \"tipos-documentos\"; \n    tags.value = Tag[index]\n    const get = apisGet[index]\n    const info = await get.getAll([]);\n    catalogs.value = info;\n    confirmationModal.value = new Modal($(\"#confirmation-modal\"))\n    if(!refresh)\n        createTable();\n    else\n        refreshTable();\n};\n\nconst deleteRequests = async (id) => {\n    const get = apisGet[route.params.name]\n    get.drop(id)\n    .then((res) => {\n        toast.success(\"Se ha eliminado el folio \"+ id + \" correctamente\", {\n          timeout: 2000,\n        });\n        getRequests(true);\n    });\n   \n};\n\n\nwatch(\n    () => updated,\n    (updated, oldUpdated) => {\n        getRequests(true);\n    },\n    { deep: true },    \n);\n\nwatch(  \n    () => route.params.name,\n    (route, oldRoute) => {\n        getRequests(true);\n    },\n    { deep: true },\n);\n\n</script>","\nexport function useCatalogsRequests(from = null, to = null) {\n    const catalogsColumns = [\n        {\n            title: \"Folio\",\n            data: \"id\",\n            visible: true\n        },\n        {\n            title: \"Nombre\",\n            data: \"name\",\n        },\n        {\n            title: \"Código\",\n            data: \"code\",\n        },\n        {\n            targets: -1,\n            data: null,\n            className: \"col-2 text-center\",\n            defaultContent: `<button id=\"btn_editar\" class=\"btn btn-warning uil-edit-alt\" data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            title=\"Editar\" ></button>`,\n        },\n    ];\n    return {\n        catalogsColumns,\n    };\n}","import script from \"./GlobalCatalogs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GlobalCatalogs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div v-if=\"route.params.name === 'tipos-documentos'\" class=\"page-title-box\">\n                <h1 class=\"page-title\">Tipos de Documentos</h1>\n            </div>\n            <div v-else class=\"page-title-box\">\n                <h1 class=\"page-title\">Catálogo de {{title[route.params.name]}}</h1>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4\">\n            <div class=\"card tilebox-one\">\n                <div class=\"card-body\">\n                    <FormCatalogs :edit=\"edit\" :route=\"route\" :param=\"param\" :dataForm=\"dataForm\" @update=\"dataUpdated\" @cancel=\"cancelUpdate\"></FormCatalogs>\n                </div> \n            </div>\n        </div>\n\n        <div class=\"col-xl-9 col-lg-8\">\n            <div class=\"card card-h-100\">\n                <div class=\"card-body\">\n                    <!-- <div class=\"alert alert-warning alert-dismissible fade show mb-3\" role=\"alert\">\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                        Property HY1xx is not receiving hits. Either your site is not receiving any sessions or it is not tagged correctly.\n                    </div> -->\n                    <TableCatalogs  @data=\"receivedData\" :updated=\"updated\"></TableCatalogs>\n                </div> \n            </div> \n        </div>\n    </div>\n    \n</template>\n<script setup>\n    import { ref, onMounted, watch, toRef, reactive } from \"vue\";\n    import $ from 'jquery'\n    import { useRouter, useRoute } from \"vue-router\";\n    import FormCatalogs from \"./FormCatalogs.vue\";\n    import TableCatalogs from \"./TableCatalogs.vue\";\n    \n    const router = useRouter();\n    const route = useRoute();\n\n    const edit = ref(false);\n    const updated = ref(false);\n    const param = ref(\"\");\n\n    const title = {\n        'tipos-documentos':\"Tipos de Documento\",\n        fondos: \"Fondos\",\n        secciones: \"Secciones\",\n        'areas-productoras': \"Aréas Productoras\",\n        'tiempos-conservacion':\"Tiempos de Conservación\",\n        'tipos-conservacion':\"Tipos de Conservación\",\n        'valores-documentales':\"Valores Documentales\",\n        'tipos-informacion':\"Tipos de Información\",\n        'tecnicas-seleccion':\"Técnicas de Selección\"\n    }\n\n    const dataForm = ref({\n        id:\"\",\n        name: \"\",\n        code: \"\",\n    });\n\n    function receivedData(data) {\n        edit.value = true;\n        dataForm.value = data\n    }\n    function dataUpdated() {\n        updated.value = !updated.value;\n    }\n\n    function cancelUpdate(){\n        dataForm.value = {\n            name : \"\",\n            code : \"\"\n        };\n        edit.value = false;\n    }\n</script>","import script from \"./ConfirmationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmationModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <div :id=\"modalId != null && modalId != ''? modalId : 'confirmation-modal'\" class=\"modal fade\"  data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header modal-colored-header bg-primary\">\n                        <h4 class=\"modal-title\" id=\"primary-header-modalLabel\">{{title}}</h4>\n                        <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"response(false)\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        {{message}}\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" @click=\"response(false)\">Cancelar</button>\n                        <button type=\"button\" class=\"btn btn-primary\" @click=\"response(true)\">Aceptar</button>\n                    </div>\n                </div><!-- /.modal-content -->\n            </div><!-- /.modal-dialog -->\n        </div><!-- /.modal -->\n    </div>\n</template>\n<script setup>\n    import { ref, toRef} from 'vue';\n\n    const emit = defineEmits(['response']);\n\n    const props = defineProps({\n        title: String,\n        message: String,\n        modalId: String\n    });\n\n    const title = toRef(props, 'title');\n    const message = toRef(props, 'message');\n    const modalId = toRef(props, 'modalId');\n\n    function response(value){\n        emit('response', value);\n    }\n</script>"],"names":["unwrapObj","obj","ignoreKeys","arguments","length","undefined","Object","keys","reduce","o","k","includes","unref","isFunction","val","isProxy","value","isReactive","isReadonly","get","stringPath","def","current","path","split","i","gatherBooleanGroupProperties","group","nestedResults","property","computed","some","gatherArrayGroupProperties","all","fetchedProperty","concat","callRule","rule","siblingState","instance","call","normalizeValidatorResponse","result","$valid","createValidatorResult","model","$dirty","config","validatorName","propertyKey","propertyPath","$lastInvalidState","$lastCommittedOn","$pending","ref","$params","$response","$invalid","$unwatch","$async","_ref","$lazy","$rewardEarly","watchTargets","$pendingCounter","watch","ruleResult","err","Promise","reject","resolve","then","data","catch","error","immediate","deep","createAsyncResult","$validator","$watchTargets","_ref2","returnValue","createSyncResult","message","$message","$model","$propertyPath","$property","_empty","_call","body","direct","e","setValidations","$validate","f","$touch","nextTick","unwatch","mergedConfig","$commit","args","apply","this","validations","state","key","parentKey","childResults","resultsCache","globalConfig","externalResults","rules","nestedValidators","validationGroups","validationsRaw","validationKeys","forEach","v","startsWith","sortValidations","assign","nestedState","s","cachedExternalResults","nestedExternalResults","results","ruleKeys","cachedResult","$partial","$path","$reset","ruleKey","$externalResults","map","stringError","index","$uid","r","$error","$silentErrors","filter","res","reactive","$errors","Date","now","set","createValidationResults","nestedValidationKeys","nestedKey","collectNestedValidationResults","$validationGroups","entries","$anyDirty","allResults","allRes","values","every","modelErrors","nestedErrors","errors","nr","createMetaFields","external","isRef","$autoDirty","flush","$getResultsForChild","$clearExternalResults","ResultsStorage","constructor","storage","Map","checkRulesValidity","storedRules","storedRulesKeys","newRulesKeys","paramKey","storedRuleResultPair","isValidCache","CollectFlag","COLLECT_ALL","COLLECT_NONE","VuelidateInjectChildResults","Symbol","VuelidateRemoveChildResults","nestedValidations","$scope","childResultsRaw","childResultsKeys","__vuelidateInjectInstances","$registerAs","childScope","$stopPropagation","push","__vuelidateRemoveInstances","childKey","sendValidationResultsToParent","inject","provide","removeValidationResultsFromParent","ComputedProxyFactory","target","Proxy","prop","uid","useVuelidate","_getCurrentInstance","currentVueInstance","getCurrentInstance","proxy","componentOptions","$options","validationResults","onBeforeMount","vuelidateExternalResults","validationsConfig","validationsWatchTarget","newValidationRules","onBeforeUnmount","isObject","Array","isArray","normalizeValidatorObject","validator","unwrapValidatorResponse","unwrapNormalizedValidator","withParams","Error","validatorObj","withMessage","req","isNaN","getTime","_","String","len","regex","_len","expr","_key","reg","test","common","freeze","__proto__","withAsync","validators","collection","others","previous","collectionItem","collectionEntryResult","innerValidators","propertyResult","currentValidator","$data","_ref3","context","a","b","unwrap","numeric","type","email","maxLength","max","minLength","min","required","trim","minValue$1","minValue","factory","$","window","document","_ext","_Api","_api_register","_api_registerPlural","DataTable","options","sSelector","oOpts","api","rows","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","callback","aoData","remove","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","style","width","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","name","sort","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","d","_intVal","integer","parseInt","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","_stripHtml","_pluck","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","j","again","_fnHungarianMap","match","newKey","hungarian","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","util","throttle","freq","timer","frequency","that","clearTimeout","setTimeout","escapeRegex","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","_fnNodeToDataIndex","_DT_RowIndex","_fnNodeToColumnIndex","anCells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","nTd","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","__rowc","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","html","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","jqXHR","newData","baseAjax","sError","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","alert","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","renderer","host","__apiStruct","__arrayProto","prototype","_toSettings","mixed","jq","tables","ctxSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","__row_selector","sel","selInt","cellIdx","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_add","klass","addRow","created","colSpan","_details","_detailsShow","insertAfter","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","oPaginate","aria","counter","attach","container","button","clickHandler","sFirst","sPageButtonDisabled","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnCalculateEnd","dataTableSettings","dataTableExt","axios","status","formData","headers","getAll","getOne","store","drop","update","toast","useToast","route","useRouter","useRoute","dataForm","toRef","props","edit","productionArea","section","backGround","btn","code","helpers","v$","apisGet","useFileCatalogsDocumentAPI","fondos","useFileCatalogsBackgroundAPI","secciones","useFileCatalogsSectionAPI","useFileCatalogsProductionAPI","useFileCatalogsTimeAPI","useFileCatalogsTypeAPI","useFileCatalogsValueAPI","useFileCatalogsInfoAPI","useFileCatalogsSelectionAPI","buttonTag","onSubmit","onMounted","getRequests","addClassification","params","timeout","emit","resetData","warning","editRequest","async","_value","resBackground","resSection","resProductionArea","oldRoute","confirmationModal","updated","toRefs","catalogs","catalogsId","fila","tags","Tag","confirmationResponse","response","deleteRequests","globalTable","catalogsColumns","title","refreshTable","scrollCollapse","createTable","catalog","findIndex","refresh","Modal","oldUpdated","receivedData","dataUpdated","cancelUpdate","modalId"],"sourceRoot":""}